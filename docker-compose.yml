version: "3"

services:
#  nginx:
#    image: nginx
#    build:
#      context: .
#      dockerfile: ./nginx/Dockerfile
#    ports:
#      - 8000:80
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  redis:
    image: "redis:alpine"
    command: >
      redis-server --port 6380
  celery-beat:
    build: .
    env_file:
      - .env
    command: celery beat --app Forum.celery
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
  celery:
    build: .
    env_file:
      - .env
    command: celery -A Forum worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
  backend:
    build:
      context: .
    restart: always
    ports:
    - "5000:5000"
    volumes:
    - ./backend:/app
    command: sh -c "rm -rf celerybeat.pid && python manage.py migrate && python manage.py runserver 0.0.0.0:5000"
    env_file:
      - .env
    depends_on:
      - db
      - celery-beat
      - celery
  frontend:
    image: node:13.10.1-stretch
    restart: always
    volumes:
    - ./frontend:/frontend
    working_dir: /frontend
    ports:
      - "8080:8080"
    command: bash -c "npm install && npm run dev"
    depends_on:
      - backend
  db:
    image: postgres:12.1-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - ./.env
volumes:
  db-data: